variables:
  LC_ALL: C.UTF-8
  LANG: C.UTF-8

.only-default: &only-default
  only:
    - merge_requests

stages:
  - linting
  - build
  - test
  - deploy
  
static linting:
  <<: *only-default
  tags:
    - docker
  image: ubuntu:18.04
  stage: linting
  needs: []
  script:
    - apt update
    - apt install -y cmake g++ clang ninja-build clang-tidy
    - mkdir build && cd build
    - cmake -G "Ninja" ../ -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DTCS_ENABLE_TESTS=ON -DTCS_ENABLE_EXAMPLES=ON
    - clang-tidy ../src/*.c ../examples/*.c

code format:
  <<: *only-default
  tags:
    - docker
  image: alpine:3.12
  stage: linting
  needs: []
  script:
    - apk add clang python3
    - clang-format --version
    - python3 ./ci/run-clang-format.py -j 1 -r --exclude tests/doctest.h src tests examples

Windows MSVC v19.26 x86 and x86_64:
  <<: *only-default
  tags:
    - shared-windows
    - windows
    - windows-1809
  stage: build
  needs: []
  script:
    - '& ./ci/build_msvc.bat'
    - 'mkdir build'
    - 'mv build32/tests/Debug/tests.exe ./build/tests_msvc_debug_x86.exe'
    - 'mv build32/tests/Release/tests.exe ./build/tests_msvc_release_x86.exe'
    - 'mv build64/tests/Debug/tests.exe ./build/tests_msvc_debug_x64.exe'
    - 'mv build64/tests/Release/tests.exe ./build/tests_msvc_release_x64.exe'
  artifacts:
    paths:
      - ./build/tests_msvc_debug_x86.exe
      - ./build/tests_msvc_release_x86.exe
      - ./build/tests_msvc_debug_x64.exe
      - ./build/tests_msvc_release_x64.exe

linux gcc v9.3 x86_64:
  <<: *only-default
  tags:
    - docker
  image: amd64/alpine:3.12
  stage: build
  needs: []
  script:
    - apk add cmake g++ ninja
    - mkdir build && cd build
    - cmake -G "Ninja" ../ -DTCS_ENABLE_TESTS=ON -DTCS_ENABLE_EXAMPLES=ON -DTCS_WARNINGS_AS_ERRORS=ON
    - cmake --build .
    - mv ./tests/tests ./tests_linux_gcc_amd64
  artifacts:
    paths:
      - ./build/tests_linux_gcc_amd64

linux gcc v9.3 i386:
  <<: *only-default
  image: i386/alpine:3.12
  stage: build
  needs: []
  tags:
    - docker
  script:
    - apk add cmake g++ ninja
    - mkdir build && cd build
    - cmake -G "Ninja" ../ -DTCS_ENABLE_TESTS=ON -DTCS_ENABLE_EXAMPLES=ON -DTCS_WARNINGS_AS_ERRORS=ON
    - cmake --build .
    - mv ./tests/tests ./tests_linux_gcc_i386
  artifacts:
    paths:
      - ./build/tests_linux_gcc_i386


Windows 10 x86_64:
  <<: *only-default
  tags:
    - shared-windows
    - windows
    - windows-1809
  stage: test
  needs: ["Windows MSVC v19.26 x86 and x86_64"]
  script:
    - ./build/tests_msvc_debug_x86.exe
    - ./build/tests_msvc_release_x86.exe
    - ./build/tests_msvc_debug_x64.exe
    - ./build/tests_msvc_release_x64.exe

linux test x86_64:
  <<: *only-default
  tags:
    - docker
  image: amd64/alpine:3.12
  stage: test
  needs: ["linux gcc v9.3 x86_64"]
  script:
    - apk add libstdc++
    - ./build/tests_linux_gcc_amd64

linux test i386:
  <<: *only-default
  tags:
    - docker
  image: i386/alpine:3.12
  stage: test
  needs: ["linux gcc v9.3 i386"]
  script:
    - apk add libstdc++
    - ./build/tests_linux_gcc_i386

sphinx:
  <<: *only-default
  tags:
    - docker
  image: alpine:3.12
  stage: deploy
  needs: []
  script:
    - apk add python3 cmd:pip3 make doxygen
    - pip3 install sphinx
    - cd docs
    - make html
